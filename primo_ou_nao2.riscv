.data
sim:
	.string "sim\n"
nao:
	.string "nao\n"
invalido:
	.string "Entrada invalida.\n"
	
.text
main:
	li a7, 5
	ecall
	mv t0, a0 # Número a ser verificado
	
	li t1, 2
	li t4, 1
	li t2, 0 # Inicializa o contador de divisões
	beq t0, t1, eprimo
	beq t0, t4, nnprimo
	
	ble t0, zero, naopode
	
loop:
	beq t1, t0, eprimo # Pula para eprimo se o divisor for igual ao número

	rem t3, t0, t1 # Calcula o resto da divisão

	beqz t3, nnprimo # Pula para nnprimo se o resto for igual a zero

	addi t1, t1, 1 # Incrementa o divisor
	addi t2, t2, 1 # Incrementa o contador de divisões

	blt t1, t0, loop # Salta para loop se o divisor for menor que o número
	

eprimo:

	li a7, 4
	la a0, sim
	ecall
	j done
	
nnprimo:

	li a7, 4
	la a0, nao
	ecall
	j done
naopode:

	li a7, 4
	la a0, invalido
	ecall
	j done
done:
	
